<?xml version="1.0" encoding="UTF-8"?>
<analysisEngineDescription xmlns="http://uima.apache.org/resourceSpecifier">
  <frameworkImplementation>org.apache.uima.java</frameworkImplementation>
  <primitive>true</primitive>
  <annotatorImplementationName>fr.lipn.nlptools.uima.lia.tagg.LiaCapitalAE</annotatorImplementationName>
  <analysisEngineMetaData>
    <name>LiaCapitalAED</name>
    <description> * this AE is a wrapper for the LIA program "lia_nett_capital", which (as far as i know) 
 * simply "cleans" the text by replacing any capital letter which is at the beginning of a sentence
 * by the same lowercase character.
 * In the normal LIA process, should be called after tokenization in words and sentences, but before POS tagging.
 * 
 * Important: this AE possibly adds or modifies &lt;code&gt;Cleaned&lt;/code&gt; annotations (to reflect
 * the changes made by the wrapped program).
</description>
    <version>1.0</version>
    <vendor>LIPN - CNRS 7030 - Univ Paris 13</vendor>
    <configurationParameters>
      <configurationParameter>
        <name>LiaTaggDir</name>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>true</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>Language</name>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>TimeOut</name>
        <type>Integer</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>CharacterCodingErrorReplacementValue</name>
        <description>Replacement value for character coding errors. Must contain only one character.
If defined, this value will be used to replace unmappable characters in order to avoid this kind of error. Otherwise such errors will raise an exception, thus usually making the process fail.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>RunIdValue</name>
        <description>Custom value that will be written in the "runId" feature of all output annotations</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>KeepProgramOutputInView</name>
        <description>If this parameter is set, the program output will be written in a view named after its value.</description>
        <type>String</type>
        <multiValued>false</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>SentenceFilter</name>
        <description>A list of conditions that the annotations features must satisfy to be taken into account.
It must have the form: 
&lt;attr&gt;=&lt;value&gt;
for example "runId=myRunIdValue", "componentId=myComponentIdValue"</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
      <configurationParameter>
        <name>TokenFilter</name>
        <description>A list of conditions that the annotations features must satisfy to be taken into account.
It must have the form: 
&lt;attr&gt;=&lt;value&gt;
for example "runId=myRunIdValue", "componentId=myComponentIdValue"</description>
        <type>String</type>
        <multiValued>true</multiValued>
        <mandatory>false</mandatory>
      </configurationParameter>
    </configurationParameters>
    <configurationParameterSettings>
      <nameValuePair>
        <name>LiaTaggDir</name>
        <value>
          <string>tools/lia_tagg</string>
        </value>
      </nameValuePair>
    </configurationParameterSettings>
    <typeSystemDescription>
      <imports>
        <import name="fr.lipn.nlptools.uima.lia.lia-TS"/>
      </imports>
    </typeSystemDescription>
    <typePriorities>
      <imports>
        <import name="fr.lipn.nlptools.uima.common.lipn-extended-PL"/>
      </imports>
    </typePriorities>
    <fsIndexCollection/>
    <capabilities>
      <capability>
        <inputs>
          <type allAnnotatorFeatures="true">fr.lipn.nlptools.uima.types.Token</type>
          <type allAnnotatorFeatures="true">fr.lipn.nlptools.uima.types.Sentence</type>
          <type allAnnotatorFeatures="true">fr.lipn.nlptools.uima.types.LiaCleaned</type>
        </inputs>
        <outputs>
          <type allAnnotatorFeatures="true">fr.lipn.nlptools.uima.types.LiaCleaned</type>
        </outputs>
        <languagesSupported>
          <language>fr</language>
          <language>en</language>
        </languagesSupported>
      </capability>
    </capabilities>
    <operationalProperties>
      <modifiesCas>true</modifiesCas>
      <multipleDeploymentAllowed>true</multipleDeploymentAllowed>
      <outputsNewCASes>false</outputsNewCASes>
    </operationalProperties>
  </analysisEngineMetaData>
  <resourceManagerConfiguration/>
</analysisEngineDescription>
